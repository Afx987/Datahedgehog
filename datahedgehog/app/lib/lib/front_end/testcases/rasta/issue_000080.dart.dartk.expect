library;
import self as self;
import "dart:core" as core;

class Mixin extends core::Object {
  field dynamic field;
  constructor •() → self::Mixin
    : super core::Object::•();
  method foo() → dynamic
    return 87;
}
class Foo extends self::Object+Mixin#0 {
  constructor •() → self::Foo
    : super self::Object+Mixin#0::•();
  method foo() → dynamic
    return super.{self::Object+Mixin#0::foo}();
  method bar() → dynamic
    return super.{self::Object+Mixin#0::field};
}
abstract class Object+Mixin#0 extends core::Object implements self::Mixin {
  field dynamic field;
  constructor •() → dynamic
    : super core::Object::•();
  method foo() → dynamic
    return 87;
}
static method main() → dynamic {
  dynamic f = new self::Foo::•();
  f.field = 42;
  core::print(f.bar());
}
