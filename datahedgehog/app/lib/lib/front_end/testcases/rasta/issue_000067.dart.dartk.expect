library;
import self as self;
import "dart:core" as core;
import "package:expect/expect.dart" as exp;

class A extends core::Object {
  constructor •() → dynamic
    : super core::Object::•() {}
  static factory foo() → self::A
    invalid-statement;
  method m() → core::int {}
}
class C extends self::A {
  constructor •() → dynamic
    : super self::A::•() {}
  static factory bar() → self::C
    invalid-statement;
  method m() → core::int {
    return 1;
  }
}
class D extends self::C {
  constructor •() → self::D
    : super self::C::•();
  method m() → core::int {
    return 2;
  }
}
static method main() → dynamic {
  self::A a = new self::D::•();
  exp::Expect::equals(2, a.m());
}
