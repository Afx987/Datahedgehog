library;
import self as self;
import "dart:core" as core;

class Base extends core::Object {
  constructor •() → self::Base
    : super core::Object::•();
}
class Mixin extends core::Object {
  constructor •() → self::Mixin
    : super core::Object::•();
  method foo() → dynamic
    return core::print("foo");
}
class Sub extends self::Base+Mixin#0 {
  constructor •() → self::Sub
    : super self::Base+Mixin#0::•();
}
abstract class Base+Mixin#0 extends self::Base implements self::Mixin {
  constructor •() → self::Base
    : super self::Base::•();
  method foo() → dynamic
    return core::print("foo");
}
static method main() → dynamic {
  new self::Sub::•().foo();
}
