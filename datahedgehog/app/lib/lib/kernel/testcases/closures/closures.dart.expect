library;
import self as self;
import "dart:core" as core;

static field dynamic f;
static method foo() → dynamic {
  core::print(self::f.call(0));
}
static method main(dynamic arguments) → dynamic {
  final Vector #context = MakeVector(2);
  #context[1] = arguments;
  self::f = MakeClosure<(dynamic) → dynamic>(self::closure#main#function, #context);
  self::foo();
}
static method closure#main#function(Vector #contextParameter, dynamic x) → dynamic {
  return (#contextParameter[1]).[](x);
}
